{"ast":null,"code":"import _regeneratorRuntime from\"/Users/aadilsaudagar/Desktop/ZTM NODE.JS/Code/nasaProject/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/aadilsaudagar/Desktop/ZTM NODE.JS/Code/nasaProject/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var API_URL=\"http://localhost:8000\";// since the api's URL will be same just the endpoint will differ\nfunction httpGetPlanets(){return _httpGetPlanets.apply(this,arguments);}function _httpGetPlanets(){_httpGetPlanets=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var bitsOfRepsonse,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"\".concat(API_URL,\"/v1/planets\"));case 3:bitsOfRepsonse=_context.sent;_context.next=6;return bitsOfRepsonse.json();case 6:response=_context.sent;console.log(response);return _context.abrupt(\"return\",response);case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 14:case\"end\":return _context.stop();}}},_callee,null,[[0,11]]);}));return _httpGetPlanets.apply(this,arguments);}function httpGetLaunches(){return _httpGetLaunches.apply(this,arguments);}function _httpGetLaunches(){_httpGetLaunches=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var bitsOfRepsonse,response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return fetch(\"\".concat(API_URL,\"/v1/launches\"));case 3:bitsOfRepsonse=_context2.sent;_context2.next=6;return bitsOfRepsonse.json();case 6:response=_context2.sent;console.log(response);return _context2.abrupt(\"return\",response.sort(function(a,b){return a.flightNumber-b.flightNumber;}));case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[0,11]]);}));return _httpGetLaunches.apply(this,arguments);}function httpSubmitLaunch(_x){return _httpSubmitLaunch.apply(this,arguments);}function _httpSubmitLaunch(){_httpSubmitLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(launch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(\"\".concat(API_URL,\"/v1/launches\"),{method:\"POST\",body:JSON.stringify(launch),headers:{\"Content-Type\":\"application/json\"}});case 3:return _context3.abrupt(\"return\",_context3.sent);case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0);return _context3.abrupt(\"return\",{ok:false});case 10:case\"end\":return _context3.stop();}}},_callee3,null,[[0,6]]);}));return _httpSubmitLaunch.apply(this,arguments);}function httpAbortLaunch(_x2){return _httpAbortLaunch.apply(this,arguments);}function _httpAbortLaunch(){_httpAbortLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return fetch(\"\".concat(API_URL,\"/v1/launches/\").concat(id),{method:\"DELETE\"});case 3:return _context4.abrupt(\"return\",_context4.sent);case 6:_context4.prev=6;_context4.t0=_context4[\"catch\"](0);console.log(_context4.t0);return _context4.abrupt(\"return\",{ok:false});case 10:case\"end\":return _context4.stop();}}},_callee4,null,[[0,6]]);}));return _httpAbortLaunch.apply(this,arguments);}export{httpGetPlanets,httpGetLaunches,httpSubmitLaunch,httpAbortLaunch};","map":{"version":3,"sources":["/Users/aadilsaudagar/Desktop/ZTM NODE.JS/Code/nasaProject/client/src/hooks/requests.js"],"names":["API_URL","httpGetPlanets","fetch","bitsOfRepsonse","json","response","console","log","httpGetLaunches","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","body","JSON","stringify","headers","ok","httpAbortLaunch","id"],"mappings":"2WAAA,GAAMA,CAAAA,OAAO,CAAG,uBAAhB,CAAyC;QAE1BC,CAAAA,c,oJAAf,qMAIiCC,CAAAA,KAAK,WAAIF,OAAJ,gBAJtC,QAIUG,cAJV,qCAK2BA,CAAAA,cAAc,CAACC,IAAf,EAL3B,QAKUC,QALV,eAMIC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EANJ,gCAOWA,QAPX,4DASIC,OAAO,CAACC,GAAR,cATJ,qE,yDAaeC,CAAAA,e,uJAAf,4MAIiCN,CAAAA,KAAK,WAAIF,OAAJ,iBAJtC,QAIUG,cAJV,uCAK2BA,CAAAA,cAAc,CAACC,IAAf,EAL3B,QAKUC,QALV,gBAMIC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EANJ,iCAOWA,QAAQ,CAACI,IAAT,CAAc,SAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAACE,YAAF,CAAiBD,CAAC,CAACC,YAA7B,EAAd,CAPX,+DASIN,OAAO,CAACC,GAAR,eATJ,uE,0DAaeM,CAAAA,gB,4JAAf,kBAAgCC,MAAhC,8JAKiBZ,CAAAA,KAAK,WAAIF,OAAJ,iBAA2B,CAC3Ce,MAAM,CAAE,MADmC,CAE3CC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAFqC,CAG3CK,OAAO,CAAE,CACP,eAAgB,kBADT,CAHkC,CAA3B,CALtB,oHAaIb,OAAO,CAACC,GAAR,eAbJ,iCAcW,CACLa,EAAE,CAAE,KADC,CAdX,wE,2DAoBeC,CAAAA,e,0JAAf,kBAA+BC,EAA/B,8JAIiBpB,CAAAA,KAAK,WAAIF,OAAJ,yBAA2BsB,EAA3B,EAAiC,CACjDP,MAAM,CAAE,QADyC,CAAjC,CAJtB,oHAQIT,OAAO,CAACC,GAAR,eARJ,iCASW,CACLa,EAAE,CAAE,KADC,CATX,wE,kDAeA,OAASnB,cAAT,CAAyBO,eAAzB,CAA0CK,gBAA1C,CAA4DQ,eAA5D","sourcesContent":["const API_URL = \"http://localhost:8000\"; // since the api's URL will be same just the endpoint will differ\n\nasync function httpGetPlanets() {\n  // TODO: Once API is ready.\n  // Load planets and return as JSON.\n  try {\n    const bitsOfRepsonse = await fetch(`${API_URL}/v1/planets`);\n    const response = await bitsOfRepsonse.json();\n    console.log(response);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nasync function httpGetLaunches() {\n  // TODO: Once API is ready.\n  // Load launches, sort by flight number, and return as JSON.\n  try {\n    const bitsOfRepsonse = await fetch(`${API_URL}/v1/launches`);\n    const response = await bitsOfRepsonse.json();\n    console.log(response);\n    return response.sort((a, b) => a.flightNumber - b.flightNumber);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nasync function httpSubmitLaunch(launch) {\n  // TODO: Once API is ready.\n  // Submit given launch data to launch system.\n\n  try {\n    return await fetch(`${API_URL}/v1/launches`, {\n      method: \"POST\",\n      body: JSON.stringify(launch),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  } catch (err) {\n    console.log(err);\n    return {\n      ok: false,\n    };\n  }\n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n  try {\n    return await fetch(`${API_URL}/v1/launches/${id}`, {\n      method: \"DELETE\",\n    });\n  } catch (err) {\n    console.log(err);\n    return {\n      ok: false,\n    };\n  }\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };\n"]},"metadata":{},"sourceType":"module"}